---
layout: post
title: 语法高亮干扰代码阅读？
excerpt: 五颜六色的代码到底提高的阅读效率，还是干扰了我们？
---

h1. {{ page.title }}

p(meta). 17 Feb 2014 - sz home


最近折腾编辑器的时候，看到一篇文章：
A Case Against Syntax Highlighting
Http://www.linusakesson.net/programming/syntaxhighlighting/

h2. 作者的观点是：

语法高亮弊多于利。


h3. 弊端：

1. 多种颜色会分散读者的注意力。
（本邮件的附件图片就是一个例子。）
（“快速阅读”能力越强的人，感受到的干扰应该越大吧。）

2. 语法高亮对代码的debug 并没有多大的帮助：
该内存泄漏的依然泄漏，该溢出的照样溢出，蹩脚的算法照样蹩脚。

3. 让人把更多的注意力放在了语法上，而不是逻辑。
（在容易出现拼写错误、语法错误的情况下，这就是个恶性循环。）
（感觉这一点是对应了用 MS Word 和 Latex 写文章的那种差别。）

4. 误导新人走弯路，并让人产生依赖
有语法高亮就_可能_不会刻意在意拼写和语法问题，这样就不能以_最快的_速度养成正确的习惯。
如果从一开始学习的时候就有语法高亮，那么以后在没有的时候就会觉得看代码非常困难。


h3. 好处：

1. 如果长篇的代码中，有一大段是被_注释_掉的，在有高亮的情况下，就不会在读代码或者 debug 的时候浪费太多时间了。
其实“大段被注释掉的代码”就是一个错误的做法。如果这段代码还有什么参考价值，就应该放着另外一个专供“参考”的地方。

2. 在c 语言中，= 和 == 经常会让人犯错。如果语法高亮能处分两者的不同，就很有作用。
事实上几乎没有编辑器做这样的高亮区分。


h2. ---

这样，文章的作者就作出了总结…… 略。
=-----------------=

这跟主流观点很不一样啊，我们以前的认识难道不应该是：
没有语法高亮？怎么做代码编辑器！

不过现在我觉得这文章说的还是有点道理的。


我还发现一个情况：
Linus Torvalds 说他用的是macroEmacs 的一种定制版，（在kernel.org 上可以找到。）不仅没有语法高亮，连undo 都没有…… （说是macroEmacs 4.0.x 版本才有undo，Linus 那个是基于那谁的3.9e 的。）


各位同学，你们怎么看语法高亮对 读写代码 的影响的啊？
